# -*- coding: utf-8 -*-
"""python_practice_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GTTEqTYQjXd3FN-kXvhMYfo_6FbxUgP9

# I. Functions. Arguments.

0. (5б) Назвіть 4 частини, з яких складається визначення функції.
"""

#Ключове слово def
#Назва функції
#Параметри
#Тіло функції

"""1. (4б) Визначте функцію, що приймає 2 аргументи та повертає результат ділення 1го аргумента на інший."""

def divide_func(int_a, int_b):
  print(int_a/int_b)

divide_func(10,2)

"""2. (2б) Викличте вище визначену функцію, де другий аргумент дорівнює 0."""

divide_func(2,0)

"""3. (6б) Перевизначте функцію так, щоби у випадку ділення на 0 функція повертала None, а в решті випадків - результат розрахунків."""

def divide_func_new(int_c, int_d):
  if int_d != 0:
    print(int_c/int_d)
  else:
    print(None)

divide_func_new(10,0)

"""4. (5б) Напишіть документацію (docstring) у форматі Google до функції, що має обчислювати суму двох чисел."""
"""
    Calculates the sum of two numbers.

    Parameters:
    - a (int or float): First number.
    - b (int or float): Second number.

    Returns:
    float: Sum of two numbers.
    """
"""5. (4б) Реалізуйте цю функцію (із додаванням docstring у визначення функції).
"""

def calculate_sum(a,b):
    """
    Calculates the sum of two numbers.

    Parameters:
    - a (int or float): First number.
    - b (int or float): Second number.

    Returns:
    float: Sum of two numbers.
    """
    return a+b

"""6. (6б) Визначте функцію, що віднімає одне число від іншого (підказка: це буде 2 аргументи функції). При чому, якщо не визначити, скільки саме має бути віднято від числа, за замовчуванням має відніматися 1. Викличте функцію, передаючи тільки один аргумент."""

def minus_func(c, d=1):
    print(c-d)

minus_func(10)

"""7. (10б) Визначте функцію, яка приймає iterable (ітерабельний обʼєкт, напр. список), що складається з 7ми рядкових значень - назв погодних умов (напр. "sunny") за кожен день у тижні. Повертає функція словник, де ключами є рядки з погодними умовами, а значеннями - кількість разів, скільки дана погода була протягом тижня (напр. {'sunny': 1, ...})."""

def count_weather(week):

    weather_counter = {}

    for day in week:
        if day in weather_counter:
            weather_counter[day] += 1
        else:
            weather_counter[day] = 1

    return weather_counter

"""8. (3б) Викличте цю функцію тричі з різними аргументами та виведіть результати на екран."""

week_one = ['sunny', 'rainy', 'cloudy', 'sunny', 'sunny', 'rainy', 'cloudy']
result = count_weather(week_one)
print(result)

week_two = ['rainy', 'cloudy', 'cloudy', 'sunny', 'rainy', 'sunny', 'sunny']
result = count_weather(week_two)
print(result)

week_three = ['cloudy', 'sunny', 'sunny', 'cloudy', 'rainy', 'cloudy', 'sunny']
result = count_weather(week_three)
print(result)

"""9. (15б) Напишіть програму, яка б шукала необхідне число у **впорядкованому** списку цілочислених значень, де

1.   число має вводитись з консолі.
2.   власне алгоритм пошуку винесений в окрему функцію, яка повертає булеве значення (знайдено число - True, не знайдено - False).
3. в залежності від результату функції, виведіть на екран повідомлення про успішний або ж неуспішний пошук.


**Зауваження**: використовувати оператор **in** заборонено.
"""

def find_number(list, number):
    begining = 0
    end = len(list) - 1

    while begining <= end:
        middle = (begining + end) // 2
        middle_args = list[middle]
        if middle_args == number:
            return True
        elif middle_args < number:
            begining = middle + 1
        else:
            end = middle - 1

    return False

integer_list = [2, 5, 7, 10, 15, 18, 20]
number_input = int(input("Enter number you are looking for: "))
search_result = find_number(integer_list, number_input)


if search_result:
    print(f"Number {number_input} is found in the list.")
else:
    print(f"Number {number_input} is not in the list.")

"""# II. Lambda functions.

10. (6б) Визначте анонімну функцію, що виконувала б завдання з задачі №1.
"""

divide = lambda a,b: a/b
divide(10,3)

"""11. (5б) В яких випадках варто використовувати лямбда-функції?

*місце для відповіді

Лямбду-фунції варто використовувати в простих функціях та там де вона потрібна тимчасово.

12. (9б) Визначте список з рядками. Після цього визначте анонімну функцію для отримання першого символу у верхньому регістрі для кожного рядка списку.
*Підказка*: використовуйте анонімну функцію в якості агрумента до вбудованої ф-ції, яка створена для застосування функцій над iterable обʼєктами.
Результат виведіть на екран у вигляді кортежу.
"""

text_list = ['hello', 'how', 'are','you']

result_tuple = tuple(map(lambda text: text[0].upper(), text_list))
print(result_tuple)

"""# III. Decorators.

13. (15б) Визначте декоратор, який би виводив у консоль повідомлення про початок роботи і назву функції, а після відпрацювання функції - повідомлення про закінчення роботи і назву функції, що задекорована.
"""

def hello_decorator(func):

	def inner1():
		print("Hello, this is before function execution")
		func()
		print("This is after function execution")
	return inner1

def function_to_be_used():
	print("This is inside the function !!")

function_to_be_used = hello_decorator(function_to_be_used)
function_to_be_used()

"""14. (7б) Задекоруйте функції з завдання 3, 5 та 6 декоратором із завдання 13. *Примітка*: продемонструйте 2 способи, як можна задекорувати функції (**УВАГА**: не декоруйте функції двічі!)."""

def task3_decorator(func):

    def divide_func2(int_c, int_d):
      if int_d != 0:
          return func(int_c, int_d)
      else:
          return None
    return divide_func2

@task3_decorator
def division(c, d):
    return c/d

#------------------------------

def minus_func2(v, m=1):
    print(v - m)

def task6_decorator(func):
    def wrapper(*args, **kwargs):
        print("Виклик функції перед декоруванням")
        func(*args, **kwargs)
        print("Виклик функції після декорування")

minus_func2 = task6_decorator(minus_func2)

"""15. (2б) Викличте одну з задекорованих функцій і виведіть її результат на екран."""

division_result = division(10,0)
print(division_result)

"""# Вітаю! Ви велика(ий) молодець, що впоралась(вся). Похваліть себе та побалуйте чимось приємним. Я Вами пишаюся."""